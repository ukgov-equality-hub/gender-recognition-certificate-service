name: '(shared functionality) Deploy'

on:
  workflow_call:
    inputs:
      cf_space:
        required: true
        type: string
      app_name_public:
        required: true
        type: string
      app_name_admin:
        required: true
        type: string
      app_name_dashboard:
        required: true
        type: string
      app_name_iprestrict_admin:
        required: false
        type: string
      manifest_name:
        required: true
        type: string
    secrets:
      cf_username:
        required: true
      cf_password:
        required: true
      allowed_ips_admin:
        required: false

jobs:
  deploy:
    name: 'Deploy to PaaS'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v3

      - name: 'Save build run info to JSON file'
        run: |
          echo '{ "git_commit": "${{ github.sha }}", "git_branch": "${{ github.ref_name }}", "github_action_name": "${{ github.workflow }}", "github_action_run_url": "https://github.com/cabinetoffice/grc-app/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}" }' > build-info.json

      - name: 'Install the Cloud Foundry CLI'
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf7-cli

      - name: 'Login to Gov.UK PaaS'
        run: |
          cf login -a api.london.cloud.service.gov.uk -u ${{ secrets.cf_username }} -p '${{ secrets.cf_password }}' -o 'geo-gender-recognition-certificate' -s '${{ inputs.cf_space }}'

      - name: 'Deploy Public-facing app to Gov.UK PaaS'
        run: |
          cf push "${{ inputs.app_name_public }}" --manifest manifest-${{ inputs.manifest_name }}.yml --strategy rolling

      - name: 'Deploy Admin app to Gov.UK PaaS'
        run: |
          cf push "${{ inputs.app_name_admin }}" --manifest manifest-${{ inputs.manifest_name }}-admin.yml --strategy rolling

      - name: 'Deploy Dashboard app to Gov.UK PaaS'
        if: ${{ inputs.app_name_dashboard != '' }}
        run: |
          cf push "${{ inputs.app_name_dashboard }}" --manifest manifest-${{ inputs.manifest_name }}-dashboard.yml --strategy rolling

      - name: 'Deploy IP Restrictions (admin) app to Gov.UK PaaS'
        if: ${{ inputs.app_name_iprestrict_admin != '' }} && ${{ inputs.allowed_ips_admin != '' }}
        run: |
          AWS_CLOUDFRONT_IP_RANGES=$(curl https://ip-ranges.amazonaws.com/ip-ranges.json)
          readarray -t AWS_IP4_RANGES < <(echo "${AWS_CLOUDFRONT_IP_RANGES}" | jq -r '.prefixes' | jq -rc '.[] | select( .service=="CLOUDFRONT") | .ip_prefix')
          readarray -t AWS_IP6_RANGES < <(echo "${AWS_CLOUDFRONT_IP_RANGES}" | jq -r '.ipv6_prefixes' | jq -rc '.[] | select( .service=="CLOUDFRONT") | .ipv6_prefix')
          AWS_ALL_IP_RANGES=("${AWS_IP4_RANGES[@]}" "${AWS_IP6_RANGES[@]}")
          AWS_CLOUDFRONT_IP_RANGES_TRUST=""
          for addr in "${AWS_ALL_IP_RANGES[@]}";
            do AWS_CLOUDFRONT_IP_RANGES_TRUST="$AWS_CLOUDFRONT_IP_RANGES_TRUST set_real_ip_from ${addr//[$'\r']};"; true;
          done;
          
          cf set-env "${{ inputs.app_name_iprestrict_admin }}" AWS_CLOUDFRONT_TRUSTED "$(printf "%s" "${AWS_CLOUDFRONT_IP_RANGES_TRUST}")"
          
          cf set-env "${{ inputs.app_name_iprestrict_admin }}" ALLOWED_IPS "${{ secrets.allowed_ips_admin }}"
          
          cf push "${{ inputs.app_name_iprestrict_admin }}" --manifest manifest.yml --strategy rolling
        working-directory: ./hosting/grc-iprestrict-admin
